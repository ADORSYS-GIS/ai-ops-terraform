name: Deploy ArgoCD to K3s with Terraform

on:
  push:
    branches: [argocd-setup]
  workflow_dispatch:

env:
  KUBECONFIG: ${{ github.workspace }}/.kube/config

jobs:
  deploy-argocd:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up K3s cluster
      run: |
        # Install K3s with required configuration
        curl -sfL https://get.k3s.io | sh -
        
        # Create kubeconfig directory and copy config
        mkdir -p ${{ github.workspace }}/.kube
        sudo cp /etc/rancher/k3s/k3s.yaml $KUBECONFIG
        sudo chmod 644 $KUBECONFIG
      

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Set up Helm
      uses: azure/setup-helm@v4
      with:
        version: 'v3.13.0'

    - name: Configure Kubernetes context
      run: |
        # Verify cluster access
        kubectl cluster-info
        kubectl get nodes

    - name: Terraform Init in argocd module
      run: |
        cd modules/argocd
        terraform init

    - name: Terraform Apply in argocd module
      run: |
        cd modules/argocd
        terraform apply -auto-approve

    - name: Verify ArgoCD installation
      run: |
        # Wait for ArgoCD pods to be ready
        kubectl wait --namespace argocd \
          --for=condition=ready pod \
          --selector=app.kubernetes.io/name=argocd-server \
          --timeout=300s
        
        # Check ArgoCD status
        kubectl get pods -n argocd
        kubectl get svc -n argocd

    - name: Get ArgoCD admin password
      run: |
        # Retrieve initial admin password
        kubectl -n argocd get secret argocd-initial-admin-secret \
          -o jsonpath="{.data.password}" | base64 -d
      continue-on-error: true  # This might not exist if password was changed
